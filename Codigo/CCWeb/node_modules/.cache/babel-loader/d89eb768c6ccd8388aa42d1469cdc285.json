{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermeleroy/Desktop/CRUD-FullStack-main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport GlobalStyle from \"./styles/global\";\nimport styled from \"styled-components\";\nimport Form from \"./components/Form.js\";\nimport Grid from \"./components/Grid\";\nimport { useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n_c = Container;\nconst Title = styled.h2``;\n_c2 = Title;\nfunction App() {\n  _s();\n  const [notices, setNotices] = useState([]);\n  const getNotices = async () => {\n    try {\n      const response = await axios.get(\"https://node-postgres-reactnative.onrender.com/notice\");\n      if (response.status === 200 && Array.isArray(response.data)) {\n        setNotices(response.data.sort((a, b) => a.title.localeCompare(b.title)));\n      } else {\n        throw new Error(\"Invalid response format or status code\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"An unexpected error occurred\";\n      toast.error(`Error fetching notices: ${errorMessage}`);\n    }\n  };\n  useEffect(() => {\n    getNotices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Mural de Avisos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getNotices: getNotices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        notices: notices,\n        setNotices: setNotices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 3000,\n      position: toast.POSITION.BOTTOM_LEFT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DxECLkJNQemgnMXjzk6SG1kQ1u0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["GlobalStyle","styled","Form","Grid","useEffect","useState","toast","ToastContainer","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h2","_c2","App","_s","notices","setNotices","getNotices","response","get","status","Array","isArray","data","sort","a","b","title","localeCompare","Error","error","_error$response","_error$response$data","errorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","position","POSITION","BOTTOM_LEFT","_c3","$RefreshReg$"],"sources":["/Users/guilhermeleroy/Desktop/CRUD-FullStack-main/frontend/src/App.js"],"sourcesContent":["import GlobalStyle from \"./styles/global\";\nimport styled from \"styled-components\";\nimport Form from \"./components/Form.js\";\nimport Grid from \"./components/Grid\";\nimport { useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Title = styled.h2``;\n\nfunction App() {\n  const [notices, setNotices] = useState([]);\n\n  const getNotices = async () => {\n    try {\n      const response = await axios.get(\"https://node-postgres-reactnative.onrender.com/notice\");\n      if (response.status === 200 && Array.isArray(response.data)) {\n        setNotices(response.data.sort((a, b) => a.title.localeCompare(b.title)));\n      } else {\n        throw new Error(\"Invalid response format or status code\");\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"An unexpected error occurred\";\n      toast.error(`Error fetching notices: ${errorMessage}`);\n    }\n  };\n\n  useEffect(() => {\n    getNotices();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Title>Mural de Avisos</Title>\n        <Form getNotices={getNotices} />\n        <Grid notices={notices} setNotices={setNotices} />\n      </Container>\n      <ToastContainer autoClose={3000} position={toast.POSITION.BOTTOM_LEFT} />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}