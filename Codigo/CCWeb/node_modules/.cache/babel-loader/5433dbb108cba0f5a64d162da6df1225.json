{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermeleroy/Desktop/CRUD-FullStack-main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport GlobalStyle from \"./styles/global\";\nimport styled from \"styled-components\";\nimport Form from \"./components/Form.js\";\nimport Grid from \"./components/Grid\";\nimport { useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n_c = Container;\nconst Title = styled.h2``;\n_c2 = Title;\nfunction App() {\n  _s();\n  const [notices, setNotices] = useState([]);\n  const [onEdit, setOnEdit] = useState(null);\n  const getNotices = async () => {\n    try {\n      const response = await axios.get(\"https://node-postgres-reactnative.onrender.com/notice\");\n      // Ensure the response is sorted as needed, possibly by 'title' or another relevant field\n      const sortedNotices = response.data.sort((a, b) => a.title > b.title ? 1 : -1);\n      setNotices(sortedNotices);\n    } catch (error) {\n      // Use toast to display error messages\n      toast.error(\"Error loading notices: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    getNotices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Mural de Avisos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onEdit: onEdit,\n        setOnEdit: setOnEdit,\n        getNotices: getNotices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        setOnEdit: setOnEdit,\n        notices: notices,\n        setNotices: setNotices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 3000,\n      position: toast.POSITION.BOTTOM_LEFT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+XWHwjI5AIGddAss94Ku2RRwdlQ=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["GlobalStyle","styled","Form","Grid","useEffect","useState","toast","ToastContainer","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h2","_c2","App","_s","notices","setNotices","onEdit","setOnEdit","getNotices","response","get","sortedNotices","data","sort","a","b","title","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","position","POSITION","BOTTOM_LEFT","_c3","$RefreshReg$"],"sources":["/Users/guilhermeleroy/Desktop/CRUD-FullStack-main/frontend/src/App.js"],"sourcesContent":["import GlobalStyle from \"./styles/global\";\nimport styled from \"styled-components\";\nimport Form from \"./components/Form.js\";\nimport Grid from \"./components/Grid\";\nimport { useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Title = styled.h2``;\n\nfunction App() {\n  const [notices, setNotices] = useState([]);\n  const [onEdit, setOnEdit] = useState(null);\n\n  const getNotices = async () => {\n    try {\n      const response = await axios.get(\"https://node-postgres-reactnative.onrender.com/notice\");\n      // Ensure the response is sorted as needed, possibly by 'title' or another relevant field\n      const sortedNotices = response.data.sort((a, b) => (a.title > b.title ? 1 : -1));\n      setNotices(sortedNotices);\n    } catch (error) {\n      // Use toast to display error messages\n      toast.error(\"Error loading notices: \" + error.message);\n    }\n  };\n\n  useEffect(() => {\n    getNotices();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Title>Mural de Avisos</Title>\n        <Form onEdit={onEdit} setOnEdit={setOnEdit} getNotices={getNotices} />\n        <Grid setOnEdit={setOnEdit} notices={notices} setNotices={setNotices} />\n      </Container>\n      <ToastContainer autoClose={3000} position={toast.POSITION.BOTTOM_LEFT} />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}